/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// This code was autogenerated and then customized to suit my needs.
// It loads the model for the arrow, which is not a default model in Three.js.

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { MeshStandardMaterial } from 'three'

export default function Arrow(props) {
  // This loads the arrow model.
  const { nodes, materials } = useGLTF('/arrow_model.glb')
  const mesh = useRef();
  // This side effect updates the position of the model when the position
  // argument changes.
  useEffect(() => {
    mesh.current.position.copy(props.position);
  }, [props.position.x, props.position.y, props.position.z]);

  const args = {
    geometry:nodes.Cylinder.geometry,
    position: props.position ? props.position : [0,0,0],
    rotation: props.rotation ? props.rotation : [0,0,0],
    scale: typeof props.scale !== "undefined" ? [0.187, 1.4, 0.187].map(n => n*props.scale) : [0.187, 1.4, 0.187],
    onClick: props.onClick
  };
  return (
    <group dispose={null}>
      <mesh {...args} ref={mesh}>
        <meshStandardMaterial color = {props.color ? props.color : 'purple'} ref={props.meshMaterial}/>
      </mesh>
    </group>
  )
}

useGLTF.preload('/arrow_model.glb')
